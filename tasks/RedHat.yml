---
- name: Add elasticsearch repo
  yum_repository:
    name: "elasticsearch"
    description: "elasticsearch repo"
    baseurl: "{{elasticsearch_repo_uri}}"
    gpgkey: "{{elasticsearch_gpg_key}}"
    state: present

- name: Install ElasticSearch package
  yum:
    name: "{{elasticsearch_pkg_name}}"
    state: present
    update_cache: yes

- name: Template of jvm.options
  template:
    src: jvm.options.j2
    dest: "{{elasticsearch_dir}}/jvm.options"
    mode: 0644
  vars:
    heapsize: "{{elasticsearch_heapsize}}"
  notify: Restart_elasticsearch.service

- name: Make sure elasticsearch is up
  service:
    name: elasticsearch
    state: started
    enabled: yes
  register: elasticsearch_up

- name: Pause a while
  pause:
    seconds: "{{elasticsearch_pausetime}}"
  when: elasticsearch_up is changed

- name: Copy index templates
  copy:
    src: "../../{{item.value}}/files/{{item.key}}.json"
    dest: /var/cache/ansible/
    mode: 0644
  with_dict: "{{elasticsearch_index_template}}"

- name: Check index templates
  command: "curl -I -s http://localhost:{{elasticsearch_port}}/_template/{{item.key}}"
  failed_when: False
  changed_when: False
  with_dict: "{{elasticsearch_index_template}}"
  register: "es_check"

- name: Upload index templates
  command: "curl -XPUT -s http://localhost:{{elasticsearch_port}}/_template/{{item.item.key}} -H 'Content-Type: application/json' -d @/var/cache/ansible/{{item.item.key}}.json"
  when: "' 200 OK' not in item.stdout"
  with_items: "{{es_check.results}}"

- name: Get stats of monitrc
  stat:
    path: "{{monit_dir}}/monitrc"
    get_md5: no
    get_checksum: no
  register: st_monitrc

- name: Template of elasticsearch.monit
  template:
    src: elasticsearch.monit.j2
    dest: "{{monit_includedir}}/elasticsearch.monit"
    mode: 0644
  vars:
    pidfile: "{{elasticsearch_pidfile}}"
    start_program: '/usr/bin/systemctl start {{elasticsearch_pkg_name}}'
    stop_program: '/usr/bin/systemctl stop {{elasticsearch_pkg_name}}'
  when: st_monitrc.stat.exists
  notify: Restart_monit.service
